var request = require('request');
var Ebay = require('ebay');
var ebay = new Ebay({
  app_id: 'PRICEHUN-773c-470d-948e-b047f4b7e4e1'
});

var self = module.exports;

self.searchItems = function(params, callback) {
	ebay.get('finding', params, function (err, data) {
   if(err) {
    if (callback) callback(new Error("Error getting search"), null);
  }
  			//console.log("Ebay result: "+JSON.stringify(data));
  			result = {};
  			list = [];
  			//console.log("RESULT EBAY:"+JSON.stringify(data.findItemsByKeywordsResponse[0].searchResult[0].item));
  			try{
          data.findItemsByKeywordsResponse[0].searchResult[0].item.forEach(function(ite){
            if(ite.listingInfo[0].buyItNowAvailable[0] == "true"){
             var stdItem = {};
             stdItem.name = ite.title[0];
             stdItem.thumbnailImage = ite.galleryURL[0];
             stdItem.salePrice = ite.listingInfo[0].buyItNowPrice[0].__value__;
             stdItem.url = ite.viewItemURL;
             stdItem.manufacturer = null;
             stdItem.store = "ebay";

             list.push(stdItem);
    					//console.log("Item valid: "+JSON.stringify(stdItem));
    				}
    			});

          list.sort( predicatBy("salePrice"));
          result = list[0];

        }catch(err){
          console.log("Ebay item non trouve !!!!!!!" +err);
        }
        if (callback) callback(null, result);
      });	
};
function predicatBy(prop){
 return function(a,b){
  if( a[prop] > b[prop]){
    return 1;
  }else if( a[prop] < b[prop] ){
    return -1;
  }
  return 0;
}
}
